 <window>
 	<defaultcontrol always="true">50</defaultcontrol>
 	<views>50,51,52,53,55,56,57,58,59,499,500,501,502,503,504,505,506,507,509,591,592,601,602,609</views>
 	<menucontrol>9051</menucontrol>
 	<onload condition="System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(Disable.NextAired) + !Container.Content(movies) + !Container.Content(musicvideos)">RunScript(script.tv.show.next.aired,backend=True)</onload>
 	<onload>SetProperty(Window.HasSettings,True,Home)</onload>
 	<onload>ClearProperty(MediaMenu,Home)</onload>
 	<onunload>ClearProperty(MediaMenu,Home)</onunload>
 	<onunload>ClearProperty(Window.HasSettings,Home)</onunload>
 	<controls>
 		<control type="button" id="4400">
 			<include>HiddenObject</include>
 			<onfocus>Skin.ToggleSetting(Enable.FullscreenFanart)</onfocus>
 			<onfocus>ActivateWindow(1113)</onfocus>
 			<onleft>50</onleft>
 			<onright>50</onright>
 			<onup>50</onup>
 			<ondown>50</ondown>
 			<onclick>50</onclick>
 		</control>
 		<control type="button" id="4401">
 			<include>HiddenObject</include>
 			<onfocus condition="!Skin.HasSetting(Enable.ManualInfoPanel) | String.IsEmpty(Control.GetLabel(4420))">SetProperty(MediaMenu,True,Home)</onfocus>
 			<onfocus condition="!Skin.HasSetting(Enable.ManualInfoPanel) | String.IsEmpty(Control.GetLabel(4420))">SetFocus(9050)</onfocus>
 			<onup>SetProperty(MediaMenu,True,Home)</onup>
 			<onup>SetFocus(9050)</onup>
 			<ondown>50</ondown>
 			<onleft>50</onleft>
 			<onright>50</onright>
 		</control>
 		<control type="fadelabel" id="4410">
 			<top>-100</top>
 			<width>2560</width>
 			<height>0</height>
 			<scrollspeed>20</scrollspeed>
 			<scrollout>false</scrollout>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),5)">FadelabelPauseAtEnd5</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),6)">FadelabelPauseAtEnd6</include>
 			<include condition="String.IsEmpty(Skin.String(FanartTimePerImage))">FadelabelPauseAtEnd7</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),8)">FadelabelPauseAtEnd8</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),9)">FadelabelPauseAtEnd9</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),10)">FadelabelPauseAtEnd10</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),15)">FadelabelPauseAtEnd15</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),20)">FadelabelPauseAtEnd20</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),30)">FadelabelPauseAtEnd30</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),60)">FadelabelPauseAtEnd60</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),90)">FadelabelPauseAtEnd90</include>
 			<font>font10</font>
 			<textcolor>white</textcolor>
 			<randomize>true</randomize>
 			<label>$INFO[ListItem.Art(extrafanart1)]</label>
 			<label>$INFO[ListItem.Art(extrafanart2)]</label>
 			<label>$INFO[ListItem.Art(extrafanart3)]</label>
 			<label>$INFO[ListItem.Art(extrafanart4)]</label>
 			<label>$INFO[ListItem.Art(extrafanart5)]</label>
 			<label>$INFO[ListItem.Art(extrafanart6)]</label>
 			<label>$INFO[ListItem.Art(extrafanart7)]</label>
 			<label>$INFO[ListItem.Art(extrafanart8)]</label>
 			<label>$INFO[ListItem.Art(extrafanart9)]</label>
 			<label>$INFO[ListItem.Art(extrafanart10)]</label>
 			<visible>!Skin.HasSetting(Disable.ExtraFanart)</visible>
 		</control>
 		<control type="label" id="4420">
 			<label>$VAR[VideoInfoPanelVar]</label>
 			<include>HiddenObject</include>
 			<visible>Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(57) | Control.IsVisible(59) | Control.IsVisible(601)</visible>
 			<include condition="!String.IsEmpty(Skin.String(InfoPanel.Delay))">InfoPanelDelayAnimation</include>
 		</control>
 		<include>CommonBackground</include>
 		<control type="group">
 			<visible>Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(57) | Control.IsVisible(59) | Control.IsVisible(601)</visible>
 			<top>-30</top>
 			<include>InfoPanel</include>
 		</control>
 		<control type="group">
 			<include>WindowOpenCloseAnimation</include>
 			<include condition="!Skin.HasSetting(Enable.SlimList)">VideoList</include>
 			<include condition="Skin.HasSetting(Enable.SlimList)">SlimVideoList</include>
 			<!-- view id = 50 -->
 			<include condition="!Skin.HasSetting(Disable.InfoWallView)">VideoInfoWall</include>
 			<!-- view id = 51 -->
 			<include condition="!Skin.HasSetting(Disable.LandscapeView)">View_52_Landscape</include>
 			<!-- view id = 52 -->
 			<include condition="!Skin.HasSetting(Disable.ShowCaseView)">View_53_ShowCase</include>
 			<!-- view id = 53 -->
 			<include condition="!Skin.HasSetting(Disable.TriPanelView)">VideoTriPanel</include>
 			<!-- view id = 55 -->
 			<include condition="!Skin.HasSetting(Disable.PostersView)">Video_56_Posters</include>
 			<!-- view id = 56 -->
 			<include condition="!Skin.HasSetting(Disable.ShiftView)">PosterShift</include>
 			<!-- view id = 57 -->
 			<include condition="!Skin.HasSetting(Disable.BannerWallView)">BannerWall</include>
 			<!-- view id = 58 -->
 			<include condition="!Skin.HasSetting(Disable.LogoView)">View_59_Logo</include>
 			<!-- view id = 59 -->
 			<include condition="!Skin.HasSetting(Disable.SmallIconsView)">SmallIcons</include>
 			<!-- view id = 499 -->
 			<include condition="!Skin.HasSetting(Disable.IconsView)">VideoWall</include>
 			<!-- view id = 500 -->
 			<include condition="!Skin.HasSetting(Disable.LowListView)">VideoLowList</include>
 			<!-- view id = 501 -->
 			<include condition="!Skin.HasSetting(Disable.EpisodeView)">VideoEpisode</include>
 			<!-- view id = 502 -->
 			<include condition="!Skin.HasSetting(Disable.WallView)">View_503_Wall</include>
 			<!-- view id = 503 -->
 			<include condition="!Skin.HasSetting(Disable.GalleryView)">View_504_Gallery</include>
 			<!-- view id = 504 -->
 			<include condition="!Skin.HasSetting(Disable.PanelView)">View_505_Panel</include>
 			<!-- view id = 505 -->
 			<include condition="!Skin.HasSetting(Disable.RightListView)">Video_RightList</include>
 			<!-- view id = 506 -->
 			<include condition="!Skin.HasSetting(Disable.BigListView)">View_507_BigList</include>
 			<!-- view id = 507 -->
 			<include condition="!Skin.HasSetting(Disable.MyFlixView)">View_509_MyFlix</include>
 			<!-- view id = 509 -->
 			<include condition="!Skin.HasSetting(Disable.BigFanView)">View_591_BigFan</include>
 			<!-- view id = 591 -->
 			<include condition="!Skin.HasSetting(Disable.BannerPlexView)">BannerPlex</include>
 			<!-- view id = 601 -->
 			<include condition="!Skin.HasSetting(Disable.FanartListView)">VideoFanartList</include>
 			<!-- view id = 602 -->
 			<include condition="!Skin.HasSetting(Disable.FullscreenWallView)">View_609_Fullscreen_Wall</include>
 			<!-- view id = 609 -->
 		</control>
 		<include>UpDownShadow</include>
 		<control type="group">
 			<visible>!Window.IsActive(addoninformation)</visible>
 			<include>WindowOpenCloseAnimation</include>
 			<top>-30</top>
 			<control type="group">
 				<visible>Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(500) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(57) | Control.IsVisible(58) | Control.IsVisible(59) | Control.IsVisible(499) | Control.IsVisible(503) | Control.IsVisible(601)</visible>
 				<animation effect="slide" tween="cubic" time="720" start="0,806" end="0,0">VisibleChange</animation>
 				<control type="group">
 					<visible>Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(503)</visible>
 					<control type="group">
 						<visible>[Control.IsVisible(52) + [Container.Content(movies) | Container.Content(tvshows)] + !Skin.HasSetting(Enable.Landscape.Logo)] | [Control.IsVisible(52) + Container.Content(episodes) + Skin.HasSetting(Enable.Landscape.FloorInfo.episodes)] | [Control.IsVisible(53) + [Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(Disable.ShowCase.MovieInfo) + !Skin.HasSetting(Enable.ShowCase.Logo)] | [Control.IsVisible(53) + Container.Content(tvshows) + !Skin.HasSetting(Disable.ShowCase.TVInfo) + !Skin.HasSetting(Enable.ShowCase.Logo)] | [Control.IsVisible(53) + Container.Content(seasons) + !Skin.HasSetting(Disable.ShowCase.FloorInfo.seasons) + !Skin.HasSetting(Enable.ShowCase.SeasonBanner)] | [Control.IsVisible(503) + Container.Content(movies) + !Skin.HasSetting(Disable.Wall.MovieInfo) + !Skin.HasSetting(Enable.Wall.Logo)] | [Control.IsVisible(503) + Container.Content(tvshows) + !Skin.HasSetting(Disable.Wall.TVInfo) + !Skin.HasSetting(Enable.Wall.Logo)] | [Control.IsVisible(503) + Container.Content(seasons) + Skin.HasSetting(Enable.Wall.FloorInfo.seasons)]</visible>
 						<control type="grouplist">
 							<left>300</left>
 							<top>980</top>
 							<width>1320</width>
 							<height>42</height>
 							<align>center</align>
 							<itemgap>18</itemgap>
 							<orientation>horizontal</orientation>
 							<animation effect="slide" end="0,57" condition="ListItem.IsCollection">Conditional</animation>
 							<control type="label">
 								<width>auto</width>
 								<height>42</height>
 								<aligny>top</aligny>
 								<align>center</align>
 								<font>font16_title_bold</font>
 								<textcolor>white</textcolor>
 								<scroll>true</scroll>
 								<label>$VAR[FloorLabelVar]</label>
 								<textoffsety>-2</textoffsety>
 								<textoffsetx>0</textoffsetx>
 							</control>
 							<control type="image">
 								<width>42</width>
 								<height>46.5</height>
 								<aspectratio>keep</aspectratio>
 								<texture>$VAR[UnFocusHDIndicator]</texture>
 								<visible>[!String.IsEmpty(ListItem.VideoResolution) + [Skin.HasSetting(noindicatorlandscape) + Control.IsVisible(52)] | [Skin.HasSetting(noindicatorshowcase) + Control.IsVisible(53)]]</visible>
 							</control>
 						</control>
 					</control>
 					<control type="label">
 						<left>300</left>
 						<top>1040</top>
 						<width>1320</width>
 						<height>42</height>
 						<align>center</align>
 						<font>font16_title_bold</font>
 						<textcolor>white</textcolor>
 						<scroll>true</scroll>
 						<label>$VAR[FloorLabelVar]</label>
 						<textoffsety>-2</textoffsety>
 						<textoffsetx>0</textoffsetx>
 						<visible>[[Control.IsVisible(52) + Skin.HasSetting(Enable.Landscape.Logo) + String.IsEmpty(ListItem.Art(clearlogo))] | [Control.IsVisible(53) + Skin.HasSetting(Enable.ShowCase.Logo) + !Skin.HasSetting(Enable.ShowCase.BannerLogo) + String.IsEmpty(ListItem.Art(clearlogo))] | [Control.IsVisible(53) + Skin.HasSetting(Enable.ShowCase.Logo) + Skin.HasSetting(Enable.ShowCase.BannerLogo) + String.IsEmpty(ListItem.Art(banner))] | [Control.IsVisible(503) + Skin.HasSetting(Enable.Wall.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]] + ListItem.IsCollection</visible>
 					</control>
 					<control type="label">
 						<left>300</left>
 						<top>1040</top>
 						<width>1320</width>
 						<height>42</height>
 						<align>center</align>
 						<font>font16_title_bold</font>
 						<textcolor>white</textcolor>
 						<scroll>true</scroll>
 						<label>$VAR[FloorLabelVar]</label>
 						<textoffsety>-2</textoffsety>
 						<textoffsetx>0</textoffsetx>
 						<visible>[[Control.IsVisible(52) + String.IsEmpty(ListItem.Art(clearlogo)) + Skin.HasSetting(Enable.Landscape.Logo)] | [Control.IsVisible(53) + Skin.HasSetting(Enable.ShowCase.Logo) + !Skin.HasSetting(Enable.ShowCase.BannerLogo) + String.IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(seasons)] | [Control.IsVisible(53) + Skin.HasSetting(Enable.ShowCase.Logo) + Skin.HasSetting(Enable.ShowCase.BannerLogo) + String.IsEmpty(ListItem.Art(banner)) + !Container.Content(seasons)] | [Control.IsVisible(53) + Container.Content(seasons) + Skin.HasSetting(Enable.ShowCase.SeasonBanner) + String.IsEmpty(ListItem.Art(banner))] | [Control.IsVisible(503) + Skin.HasSetting(Enable.Wall.Logo) + !Skin.HasSetting(Enable.Wall.BannerLogo) + String.IsEmpty(ListItem.Art(clearlogo))] | [Control.IsVisible(503) + Skin.HasSetting(Enable.Wall.Logo) + Skin.HasSetting(Enable.Wall.BannerLogo) + String.IsEmpty(ListItem.Art(banner))]] + !ListItem.IsCollection + !Container.Content(genres)</visible>
 					</control>
 					<control type="group">
 						<left>300</left>
 						<top>1000</top>
 						<visible>[Control.IsVisible(52) + [Container.Content(movies) | Container.Content(tvshows)] + [!Skin.HasSetting(Enable.Landscape.Logo)]] | [Control.IsVisible(52) + Container.Content(episodes) + Skin.HasSetting(Enable.Landscape.FloorInfo.episodes)] | [Control.IsVisible(53) + Container.Content(movies) + !Skin.HasSetting(Disable.ShowCase.MovieInfo) + [!Skin.HasSetting(Enable.ShowCase.Logo)]] | [Control.IsVisible(53) + Container.Content(tvshows) + !Skin.HasSetting(Disable.ShowCase.TVInfo) + [!Skin.HasSetting(Enable.ShowCase.Logo)]] | [Control.IsVisible(53) + Container.Content(seasons) + !Skin.HasSetting(Disable.ShowCase.FloorInfo.seasons) + !Skin.HasSetting(Enable.ShowCase.SeasonBanner)] | [Control.IsVisible(503) + Container.Content(movies) + !Skin.HasSetting(Disable.Wall.MovieInfo) + [!Skin.HasSetting(Enable.Wall.Logo)]] | [Control.IsVisible(503) + Container.Content(tvshows) + !Skin.HasSetting(Disable.Wall.TVInfo) + !Skin.HasSetting(Enable.Wall.Logo)] | [Control.IsVisible(503) + Container.Content(seasons) + Skin.HasSetting(Enable.Wall.FloorInfo.seasons) + !Skin.HasSetting(Enable.Wall.SeasonBanner)]</visible>
 						<control type="label">
 							<left>185</left>
 							<top>32</top>
 							<width>950</width>
 							<height>30</height>
 							<align>center</align>
 							<font>font13_bold</font>
 							<textcolor>$VAR[UnWatchedEpColor]</textcolor>
 							<label>$VAR[FloorSubLabelVar]</label>
 							<textoffsetx>30</textoffsetx>
 							<visible>Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | [Container.Content(movies) + !ListItem.IsCollection]</visible>
 							<animation effect="slide" start="0,0" end="0,16" time="320" tween="cubic" easing="inout" condition="[Control.IsVisible(53) + [Container.Content(movies) + Skin.HasSetting(Disable.Showcase.MovieGenre)]] | [Control.IsVisible(52) + [Container.Content(movies) + Skin.HasSetting(Disable.Landscape.MovieGenre)]] | [Control.IsVisible(503) + [Container.Content(movies) + Skin.HasSetting(Disable.Wall.MovieGenre)]]">Conditional</animation>
 						</control>
 						<control type="label">
 							<left>195</left>
 							<top>70</top>
 							<width>940</width>
 							<height>30</height>
 							<align>center</align>
 							<font>font13_bold</font>
 							<textcolor>white</textcolor>
 							<label>$INFO[ListItem.Genre]</label>
 							<textoffsetx>30</textoffsetx>
 							<visible>[Control.IsVisible(53) + [Container.Content(movies) + !Skin.HasSetting(Disable.Showcase.MovieGenre)]] | [Control.IsVisible(53) + [Container.Content(tvshows) + Skin.HasSetting(Enable.Showcase.TVShowGenre)]] | [Control.IsVisible(52) + [Container.Content(movies) + !Skin.HasSetting(Disable.Landscape.MovieGenre)]] | [Control.IsVisible(52) + [Container.Content(tvshows) + Skin.HasSetting(Enable.Landscape.TVShowGenre)]] | [Control.IsVisible(503) + [Container.Content(movies) + !Skin.HasSetting(Disable.Wall.MovieGenre)]] | [Control.IsVisible(503) + [Container.Content(tvshows) + Skin.HasSetting(Enable.Wall.TVShowGenre)]] | [Control.IsVisible(53) + Container.Content(seasons) + Skin.HasSetting(Enable.Showcase.SeasonGenre)] | [Control.IsVisible(503) + Container.Content(seasons) + Skin.HasSetting(Enable.Wall.SeasonGenre)]</visible>
 							<animation effect="fade" start="0" end="100" time="320">VisibleChange</animation>
 						</control>
 						<!-- Next Episode -->
 						<control type="label">
 							<left>195</left>
 							<top>70</top>
 							<width>940</width>
 							<height>30</height>
 							<align>center</align>
 							<font>font13_bold</font>
 							<textcolor>white</textcolor>
 							<label>$LOCALIZE[31010]: $INFO[Window(Home).Property(NextAired.NextNumber)] - $INFO[Window(Home).Property(NextAired.NextTitle)] ($INFO[Window(Home).Property(NextAired.NextDay)])</label>
 							<textoffsetx>30</textoffsetx>
 							<visible>!String.IsEmpty(Window(Home).Property(NextAired.NextDate))</visible>
 							<visible>[Control.IsVisible(53) + [Container.Content(tvshows) + !Skin.HasSetting(Enable.Showcase.TVShowGenre)]] | [Control.IsVisible(52) + [Container.Content(tvshows) + !Skin.HasSetting(Enable.Landscape.TVShowGenre)]] | [Control.IsVisible(52) + Container.Content(episodes) + !Skin.HasSetting(Disable.Landscape.FloorInfo.episodes) + !Skin.HasSetting(Disable.Landscape.NextAired.episodes)] | [Control.IsVisible(503) + [Container.Content(tvshows) + !Skin.HasSetting(Enable.Wall.TVShowGenre)]] | [Control.IsVisible(53) + Container.Content(seasons) + !Skin.HasSetting(Enable.Showcase.SeasonGenre)] | [Control.IsVisible(52) + Container.Content(seasons) + !Skin.HasSetting(Enable.Landscape.SeasonGenre)] | [Control.IsVisible(503) + Container.Content(seasons) + !Skin.HasSetting(Enable.Wall.SeasonGenre)]</visible>
 						</control>
 						<!-- Next Aired Status -->
 						<control type="label">
 							<left>195</left>
 							<top>70</top>
 							<width>940</width>
 							<height>30</height>
 							<align>center</align>
 							<font>font13_bold</font>
 							<textcolor>white</textcolor>
 							<label>$INFO[Window(Home).Property(NextAired.Status)]</label>
 							<textoffsetx>30</textoffsetx>
 							<visible>[String.IsEmpty(Window(Home).Property(NextAired.NextDate)) + !String.IsEmpty(Window(Home).Property(NextAired.Status))]</visible>
 							<visible>[Control.IsVisible(53) + [Container.Content(tvshows) + !Skin.HasSetting(Enable.Showcase.TVShowGenre)]] | [Control.IsVisible(52) + [Container.Content(tvshows) + !Skin.HasSetting(Enable.Landscape.TVShowGenre)]] | [Control.IsVisible(52) + Container.Content(episodes) + Skin.HasSetting(Disable.Landscape.FloorInfo.episodes) + !Skin.HasSetting(Disable.Landscape.NextAired.episodes)] | [Control.IsVisible(503) + [Container.Content(tvshows) + !Skin.HasSetting(Enable.Wall.TVShowGenre)]] | [Control.IsVisible(53) + Container.Content(seasons) + !Skin.HasSetting(Enable.Showcase.SeasonGenre)] | [Control.IsVisible(52) + Container.Content(seasons) + !Skin.HasSetting(Enable.Landscape.SeasonGenre)] | [Control.IsVisible(503) + Container.Content(seasons) + !Skin.HasSetting(Enable.Wall.SeasonGenre)]</visible>
 						</control>
 					</control>
 					<control type="group">
 						<top>1010</top>
 						<width>100%</width>
 						<visible>Container.Content(musicvideos)</visible>
 						<control type="image">
 							<left>120</left>
 							<colordiffuse>white</colordiffuse>
 							<include>MediaFlagValues</include>
 							<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[ListItem.AudioCodec,,.png]</texture>
 						</control>
 						<control type="image">
 							<left>1675</left>
 							<colordiffuse>white</colordiffuse>
 							<include>MediaFlagValues</include>
 							<texture>$VAR[MediaFlagsPathVar]/videocodec/$VAR[SourceFlagVar]</texture>
 							<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
 						</control>
 					</control>
 				</control>
 				<control type="group">
 					<visible>Control.IsVisible(499) | Control.IsVisible(500) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(57) | [Control.IsVisible(58) + Skin.HasSetting(Disable.BannerWallInfo)] | Control.IsVisible(601)</visible>
 					<animation effect="slide" start="0" end="40" time="720" tween="cubic" easing="inout" condition="Control.IsVisible(57)">Conditional</animation>
 					<animation effect="slide" start="0" end="60" time="720" tween="cubic" easing="inout" condition="Control.IsVisible(55)">Conditional</animation>
 					<animation effect="slide" start="0,0" end="80,15" time="720" tween="cubic" easing="inout" condition="Control.IsVisible(56)">Conditional</animation>
 					<visible>[Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(sets) | Container.Content(addons)]</visible>
 					<animation effect="slide" tween="cubic" time="720" start="0,806" end="0,0">VisibleChange</animation>
 					<control type="group">
 						<left>90</left>
 						<top>1000</top>
 						<visible>![Control.IsVisible(56) | Control.IsVisible(55)]</visible>
 						<include>VisibleFadeAnimation</include>
 						<!-- Shift IMDb Logo + Oscar -->
 						<control type="grouplist">
 							<left>1542</left>
 							<top>-902</top>
 							<orientation>vertical</orientation>
 							<visible>Control.IsVisible(57)</visible>
 							<control type="image">
 								<visible>!String.IsEmpty(ListItem.Top250) + Skin.HasSetting(Enable.Shift.IMDb)</visible>
 								<width>95</width>
 								<height>45</height>
 								<align>center</align>
 								<aspectratio>scale</aspectratio>
 								<texture background="true">IMDb.png</texture>
 							</control>
 							<control type="Label">
 								<visible>!String.IsEmpty(ListItem.Top250) + Skin.HasSetting(Enable.Shift.IMDb)</visible>
 								<width>95</width>
 								<height>100</height>
 								<align>center</align>
 								<label>$INFO[ListItem.Top250,# ]</label>
 								<font>font16_title_bold</font>
 								<shadowcolor>black</shadowcolor>
 								<textcolor>ffeec900</textcolor>
 							</control>
 						</control>
 						<control type="label">
 							<top>-10</top>
 							<width>1000</width>
 							<height>42</height>
 							<aligny>top</aligny>
 							<font>font16_title_bold</font>
 							<textcolor>white</textcolor>
 							<scroll>true</scroll>
 							<label>$INFO[ListItem.Label]</label>
 							<textoffsety>-2</textoffsety>
 							<textoffsetx>30</textoffsetx>
 							<visible>!Container.Content(sets) | [Control.IsVisible(57) + Container.Content(sets)]</visible>
 						</control>
 						<control type="label">
 							<top>35</top>
 							<width>1100</width>
 							<height>30</height>
 							<font>font13_bold</font>
 							<textcolor>$VAR[UnWatchedEpColor]</textcolor>
 							<label>$VAR[FloorSubLabelVar]</label>
 							<textoffsetx>30</textoffsetx>
 							<visible>!ListItem.IsCollection</visible>
 						</control>
 						<!-- Next Episode -->
 						<control type="label">
 							<left>31</left>
 							<top>70</top>
 							<width>1220</width>
 							<height>30</height>
 							<font>font13_bold</font>
 							<textcolor>white</textcolor>
 							<label>$LOCALIZE[31010]: $INFO[Window(Home).Property(NextAired.NextNumber)] - $INFO[Window(Home).Property(NextAired.NextTitle)] ($INFO[Window(Home).Property(NextAired.NextDay)])</label>
 							<visible>!String.IsEmpty(Window(Home).Property(NextAired.NextDate))</visible>
 						</control>
 						<!-- Next Aired Status -->
 						<control type="label">
 							<left>31</left>
 							<top>70</top>
 							<width>1220</width>
 							<height>30</height>
 							<font>font13_bold</font>
 							<textcolor>white</textcolor>
 							<label>$INFO[Window(Home).Property(NextAired.Status)]</label>
 							<visible>String.IsEmpty(Window(Home).Property(NextAired.NextDate)) + !String.IsEmpty(Window(Home).Property(NextAired.Status))</visible>
 						</control>
 					</control>
 				</control>
 				<control type="group">
 					<visible>Control.IsVisible(59)</visible>
 					<!-- IMDb Logo + Oscars Statue -->
 					<control type="grouplist">
 						<left>1785</left>
 						<top>110</top>
 						<itemgap>10</itemgap>
 						<orientation>vertical</orientation>
 						<animation effect="slide" end="0,400" time="840" tween="cubic" condition="[!String.IsEmpty(Control.GetLabel(4421)) + Control.IsVisible(4421) + !Skin.HasSetting(Enable.ManualNewInfoPanel)] | [!String.IsEmpty(Control.GetLabel(4421)) + Skin.HasSetting(Enable.ManualNewInfoPanel) + Control.HasFocus(4401)]">Conditional</animation>
 						<control type="image">
 							<visible>!String.IsEmpty(ListItem.Top250) + Skin.HasSetting(imdblogo)</visible>
 							<width>95</width>
 							<height>45</height>
 							<align>center</align>
 							<aspectratio>scale</aspectratio>
 							<texture background="true">IMDb.png</texture>
 						</control>
 						<control type="Label">
 							<visible>!String.IsEmpty(ListItem.Top250) + Skin.HasSetting(imdblogo)</visible>
 							<width>95</width>
 							<height>50</height>
 							<align>center</align>
 							<label>$INFO[ListItem.Top250,# ]</label>
 							<font>font16_title_bold</font>
 							<shadowcolor>shadow</shadowcolor>
 							<textcolor>FFEEC900</textcolor>
 						</control>
 						<control type="image">
 							<width>95</width>
 							<height>135</height>
 							<align>center</align>
 							<aspectratio>keep</aspectratio>
 							<texture background="true">oscars.png</texture>
 							<visible>Skin.HasSetting(oscarlogo) + String.Contains(ListItem.FileName,.oscars)</visible>
 						</control>
 					</control>
 					<!-- Floor Info -->
 					<control type="group">
 						<top>880</top>
 						<!-- Movies -->
 						<control type="group">
 							<visible>[Container.Content(movies) + !Skin.HasSetting(noextendedinfomovies)]</visible>
 							<!-- Top250 Label -->
 							<control type="label">
 								<left>827</left>
 								<width>250</width>
 								<align>center</align>
 								<label>$INFO[ListItem.Top250,$LOCALIZE[13409] # ,]</label>
 								<font>font13</font>
 								<textcolor>white</textcolor>
 								<visible>!String.IsEmpty(ListItem.Top250) + !Skin.HasSetting(imdblogo)</visible>
 							</control>
 							<!-- Tagline -->
 							<control type="label">
 								<left>535</left>
 								<top>75</top>
 								<width>850</width>
 								<label>$INFO[ListItem.Tagline]</label>
 								<align>center</align>
 								<font>font14_bold</font>
 								<scroll>true</scroll>
 								<textcolor>white</textcolor>
 								<scrollspeed>40</scrollspeed>
 								<visible>!String.IsEmpty(ListItem.Tagline)</visible>
 							</control>
 							<!-- Year • Rating • Duration -->
 							<control type="label">
 								<left>450</left>
 								<top>150</top>
 								<width>1020</width>
 								<align>center</align>
 								<label>$VAR[FloorSubLabelVar]</label>
 								<font>font13_bold</font>
 								<textcolor>white</textcolor>
 								<visible>!ListItem.IsCollection + [Container.Content(movies) + !ListItem.IsParentFolder]</visible>
 							</control>
 						</control>
 						<!-- Movie Set Title List -->
 						<control type="textbox">
 							<label>[B]$INFO[Window(Home).Property(Set.Movies.Title)][/B]</label>
 							<align>center</align>
 							<left>160</left>
 							<top>100</top>
 							<width>1600</width>
 							<height>130</height>
 							<font>font14_textbox2</font>
 							<textcolor>white</textcolor>
 							<autoscroll time="2500" delay="2500" repeat="3000">true</autoscroll>
 							<visible>ListItem.IsCollection + Skin.HasSetting(Enable.Logo.MovieSetList)</visible>
 						</control>
 						<!-- TV -->
 						<control type="group">
 							<visible>[Container.Content(tvshows) + !Skin.HasSetting(noextendedinfotvshows)]</visible>
 							<!-- TV Show Next Aired -->
 							<!-- Next Episode -->
 							<control type="label">
 								<left>350</left>
 								<width>1220</width>
 								<align>center</align>
 								<font>font13</font>
 								<textcolor>white</textcolor>
 								<label>$LOCALIZE[31010]: $INFO[Window(Home).Property(NextAired.NextNumber)] - $INFO[Window(Home).Property(NextAired.NextTitle)] ($INFO[Window(Home).Property(NextAired.NextDay)])</label>
 								<visible>!String.IsEmpty(Window(Home).Property(NextAired.NextDate))</visible>
 							</control>
 							<!-- Show Status -->
 							<control type="label">
 								<left>350</left>
 								<width>1220</width>
 								<align>center</align>
 								<font>font13</font>
 								<textcolor>white</textcolor>
 								<label>$INFO[Window(Home).Property(NextAired.Status)]</label>
 								<visible>String.IsEmpty(Window(Home).Property(NextAired.NextDate)) + !String.IsEmpty(Window(Home).Property(NextAired.Status))</visible>
 							</control>
 							<!-- TV Total Episodes + Unwatched Episodes -->
 							<control type="label">
 								<left>400</left>
 								<top>75</top>
 								<width>1120</width>
 								<align>center</align>
 								<label>$LOCALIZE[20360]: $INFO[ListItem.Property(TotalEpisodes)][COLOR $VAR[LogoUnWatchedEpColor]]$INFO[ListItem.Property(UnWatchedEpisodes),  ($LOCALIZE[16101]: ,)][/COLOR]</label>
 								<font>font14_bold</font>
 								<textcolor>white</textcolor>
 								<visible>Container.Content(tvshows) + !ListItem.IsParentFolder</visible>
 							</control>
 							<!-- Rating and Votes -->
 							<control type="label">
 								<left>460</left>
 								<top>150</top>
 								<width>1000</width>
 								<align>center</align>
 								<label>$INFO[ListItem.RatingAndVotes]</label>
 								<font>font13_bold</font>
 								<textcolor>white</textcolor>
 								<visible>Container.Content(tvshows) + !String.IsEmpty(ListItem.RatingAndVotes)</visible>
 							</control>
 						</control>
 					</control>
 				</control>
 				<control type="image">
 					<top>920</top>
 					<width>100%</width>
 					<height>210</height>
 					<texture border="1">gradient_floor.png</texture>
 					<animation effect="slide" start="0,0" end="0,15" time="720" tween="cubic" easing="inout" condition="Control.IsVisible(56)">Conditional</animation>
 				</control>
 				<!-- Mediaflags -->
 				<control type="group">
 					<left>50</left>
 					<top>1020</top>
 					<width>100%</width>
 					<visible>[[Control.IsVisible(52) + Container.Content(movies) + !String.IsEqual(Skin.String(52.Movies.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(52) + Container.Content(tvshows) + !String.IsEqual(Skin.String(52.TV.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(52) + Container.Content(episodes) + !String.IsEqual(Skin.String(52.Episodes.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(53) + Container.Content(movies) + !String.IsEqual(Skin.String(53.Movies.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(53) + Container.Content(tvshows) + !String.IsEqual(Skin.String(53.TV.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(53) + Container.Content(seasons) + !String.IsEqual(Skin.String(53.Seasons.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(59) + Container.Content(movies) + !String.IsEqual(Skin.String(59.Movies.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(59) + Container.Content(tvshows) + !String.IsEqual(Skin.String(59.TV.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(503) + Container.Content(movies) + !String.IsEqual(Skin.String(503.Movies.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(503) + Container.Content(tvshows) + !String.IsEqual(Skin.String(503.TV.ViewFlags),$LOCALIZE[1223])] | [Control.IsVisible(503) + Container.Content(seasons) + !String.IsEqual(Skin.String(503.Seasons.ViewFlags),$LOCALIZE[1223])]] + !ListItem.IsParentFolder + !ListItem.IsCollection</visible>
 					<control type="group">
 						<control type="image" id="900011">
 							<include>MediaFlagValues</include>
 							<bordersize>2</bordersize>
 							<texture>$VAR[PathFlagsStudios]$INFO[ListItem.Studio,,.png]</texture>
 						</control>
 						<control type="label">
 							<left>-10</left>
 							<width>155</width>
 							<height>90</height>
 							<align>center</align>
 							<label>$INFO[ListItem.Studio]</label>
 							<font>font10</font>
 							<textcolor>grey2</textcolor>
 							<wrapmultiline>true</wrapmultiline>
 							<visible>String.IsEmpty(Control.GetLabel(900011))</visible>
 						</control>
 						<control type="image">
 							<left>1690</left>
 							<include>MediaFlagValues</include>
 							<texture fallback="$VAR[MediaFlagsPathVar]/mpaa/NR.png">$VAR[MediaFlagsPathVar]/mpaa/$VAR[RatingFlagVar]</texture>
 						</control>
 					</control>
 					<control type="grouplist">
 						<left>155</left>
 						<orientation>horizontal</orientation>
 						<visible>[Control.IsVisible(52) + String.IsEqual(Skin.String(52.Movies.ViewFlags),$LOCALIZE[31160]) + Container.Content(movies)] | [Control.IsVisible(52) + String.IsEqual(Skin.String(52.Episodes.ViewFlags),$LOCALIZE[31160]) + Container.Content(episodes)] | [Control.IsVisible(53) + String.IsEqual(Skin.String(53.Movies.ViewFlags),$LOCALIZE[31160]) + Container.Content(movies)] | [Control.IsVisible(59) + String.IsEqual(Skin.String(59.Movies.ViewFlags),$LOCALIZE[31160]) + Container.Content(movies)] | [Control.IsVisible(503) + String.IsEqual(Skin.String(503.Movies.ViewFlags),$LOCALIZE[31160]) + Container.Content(movies)]</visible>
 						<control type="image">
 							<width>170</width>
 							<texture>$VAR[MediaFlagsPathVar]/resolution/$INFO[ListItem.VideoResolution,,.png]</texture>
 							<include>MediaFlagValues</include>
 						</control>
 						<control type="image">
 							<width>170</width>
 							<texture>$VAR[MediaFlagsPathVar]/videocodec/$VAR[SourceFlagVar]</texture>
 							<include>MediaFlagValues</include>
 						</control>
 						<control type="label">
 							<width>835</width>
 							<include>HiddenObject</include>
 						</control>
 						<control type="image">
 							<width>170</width>
 							<include>MediaFlagValues</include>
 							<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[ListItem.AudioCodec,,.png]</texture>
 						</control>
 						<control type="image">
 							<width>170</width>
 							<include>MediaFlagValues</include>
 							<texture>$VAR[MediaFlagsPathVar]/audiochannels/$INFO[ListItem.AudioChannels,,.png]</texture>
 						</control>
 					</control>
 				</control>
 				<control type="group">
 					<visible>[Control.IsVisible(499) | Control.IsVisible(500) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(57) | [Control.IsVisible(58) + Skin.HasSetting(Disable.BannerWallInfo)] | Control.IsVisible(601)] + !ListItem.IsCollection + !ListItem.IsParentFolder</visible>
 					<visible>[Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(sets) | Container.Content(addons)]</visible>
 					<animation effect="slide" start="0" end="40" time="720" tween="cubic" easing="inout" condition="Control.IsVisible(57)">Conditional</animation>
 					<animation effect="slide" start="0" end="20,20" time="720" tween="cubic" easing="inout" condition="Control.IsVisible(55)">Conditional</animation>
 					<animation effect="slide" start="0,0" end="70,20" time="720" tween="cubic" easing="inout" condition="Control.IsVisible(56)">Conditional</animation>
 					<animation effect="slide" tween="cubic" time="720" start="0,806" end="0,0">VisibleChange</animation>
 					<control type="group">
 						<left>1444</left>
 						<top>1000</top>
 						<width>1840</width>
 						<height>90</height>
 						<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
 						<include>VisibleFadeAnimation</include>
 						<control type="image">
 							<left>32</left>
 							<width>198</width>
 							<include>MediaFlagValues</include>
 							<bordersize>2</bordersize>
 							<texture>$VAR[PathFlagsStudios]$INFO[ListItem.Studio,,.png]</texture>
 						</control>
 						<control type="image">
 							<left>230</left>
 							<include>MediaFlagValues</include>
 							<texture fallback="$VAR[MediaFlagsPathVar]/mpaa/NR.png">$VAR[MediaFlagsPathVar]/mpaa/$VAR[RatingFlagVar]</texture>
 						</control>
 					</control>
 					<control type="grouplist">
 						<left>860</left>
 						<top>1000</top>
 						<width>1000</width>
 						<height>90</height>
 						<align>right</align>
 						<orientation>horizontal</orientation>
 						<visible>![Container.Content(tvshows) | Container.Content(seasons)]</visible>
 						<control type="image">
 							<width>168</width>
 							<include>MediaFlagValues</include>
 							<texture>$VAR[MediaFlagsPathVar]/resolution/$INFO[ListItem.VideoResolution,,.png]</texture>
 							<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
 						</control>
 						<control type="image">
 							<width>168</width>
 							<include>MediaFlagValues</include>
 							<texture>$VAR[MediaFlagsPathVar]/videocodec/$VAR[SourceFlagVar]</texture>
 							<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
 						</control>
 						<control type="image">
 							<width>168</width>
 							<include>MediaFlagValues</include>
 							<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[ListItem.AudioCodec,,.png]</texture>
 							<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
 						</control>
 						<control type="image">
 							<width>168</width>
 							<include>MediaFlagValues</include>
 							<texture>$VAR[MediaFlagsPathVar]/audiochannels/$INFO[ListItem.AudioChannels,,.png]</texture>
 							<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
 						</control>
 						<control type="image">
 							<width>168</width>
 							<include>MediaFlagValues</include>
 							<texture fallback="$VAR[MediaFlagsPathVar]/mpaa/NR.png">$VAR[MediaFlagsPathVar]/mpaa/$VAR[RatingFlagVar]</texture>
 						</control>
 					</control>
 				</control>
 				<!-- Logo + Banner -->
 				<control type="image">
 					<left>785</left>
 					<top>985</top>
 					<width>350</width>
 					<height>115</height>
 					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
 					<visible>!Container.Content(seasons)</visible>
 					<visible>[Control.IsVisible(52) + Skin.HasSetting(Enable.Landscape.Logo)] | [Control.IsVisible(53) + Skin.HasSetting(Enable.ShowCase.Logo) + !Skin.HasSetting(Enable.ShowCase.BannerLogo)] | [Control.IsVisible(503) + Skin.HasSetting(Enable.Wall.Logo) + !Skin.HasSetting(Enable.Wall.BannerLogo)]</visible>
 					<animation effect="slide" end="0,15" time="0" condition="Control.IsVisible(52)">Conditional</animation>
 				</control>
 				<control type="image">
 					<left>680</left>
 					<top>990</top>
 					<width>560</width>
 					<height>100</height>
 					<aspectratio>scale</aspectratio>
 					<texture background="true">$INFO[ListItem.Art(banner)]</texture>
 					<bordertexture border="2">thumbs/panel_border3.png</bordertexture>
 					<bordersize>1</bordersize>
 					<visible>[[Control.IsVisible(53) + Skin.HasSetting(Enable.ShowCase.Logo) + Skin.HasSetting(Enable.ShowCase.BannerLogo)] | [Control.IsVisible(503) + Skin.HasSetting(Enable.Wall.Logo) + Skin.HasSetting(Enable.Wall.BannerLogo)]] + !Container.Content(seasons) | [[Control.IsVisible(53) + Skin.HasSetting(Enable.ShowCase.SeasonBanner)] | [Control.IsVisible(503) + Skin.HasSetting(Enable.Wall.SeasonBanner)]] + Container.Content(seasons)</visible>
 					<animation effect="slide" end="0,15" time="0" condition="Control.IsVisible(52)">Conditional</animation>
 				</control>
 			</control>
 		</control>
 		<control type="group">
 			<visible>!Window.IsActive(addoninformation)</visible>
 			<include>WindowOpenCloseAnimation</include>
 			<control type="group">
 				<left>550</left>
 				<top>990</top>
 				<width>1840</width>
 				<height>90</height>
 				<visible>[Container.Content(movies) + Control.IsVisible(506) + !Skin.HasSetting(Disable.RightList.Mediaflags)] | [Container.Content(episodes) + Control.IsVisible(506) + !Skin.HasSetting(Disable.RightList.EpisodeMediaflags)] | [Control.IsVisible(591) + [Container.Content(movies) | Container.Content(episodes)]] | [Control.IsVisible(509) + !Skin.HasSetting(Disable.MyFlix.Mediaflags) + [Container.Content(movies) | Container.Content(episodes)]]</visible>
 				<include>ViewAnimation</include>
 				<animation effect="slide" end="-500,10" time="320" tween="cubic" easing="inout" condition="Control.IsVisible(509) + [Container.Content(movies) | Container.Content(episodes)]">Conditional</animation>
 				<control type="image" id="900017">
 					<top>2</top>
 					<colordiffuse>grey</colordiffuse>
 					<include>MediaFlagValues</include>
 					<texture>$VAR[PathFlagsStudios]$INFO[ListItem.Studio,,.png]</texture>
 					<visible>!String.IsEmpty(ListItem.Studio)</visible>
 				</control>
 				<control type="label">
 					<width>155</width>
 					<height>90</height>
 					<align>center</align>
 					<label>$INFO[ListItem.Studio]</label>
 					<font>font10</font>
 					<textcolor>grey</textcolor>
 					<wrapmultiline>true</wrapmultiline>
 					<visible>String.IsEmpty(Control.GetLabel(900017))</visible>
 				</control>
 				<control type="image">
 					<left>165</left>
 					<width>200</width>
 					<colordiffuse>grey</colordiffuse>
 					<include>MediaFlagValues</include>
 					<texture fallback="$VAR[MediaFlagsPathVar]/mpaa/NR.png">$VAR[MediaFlagsPathVar]/mpaa/$VAR[RatingFlagVar]</texture>
 					<visible>!ListItem.IsParentFolder + !ListItem.IsCollection</visible>
 				</control>
 				<control type="image">
 					<left>400</left>
 					<colordiffuse>grey</colordiffuse>
 					<include>MediaFlagValues</include>
 					<texture>$VAR[MediaFlagsPathVar]/resolution/$INFO[ListItem.VideoResolution].png</texture>
 					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
 				</control>
 				<control type="image">
 					<left>600</left>
 					<colordiffuse>grey</colordiffuse>
 					<include>MediaFlagValues</include>
 					<texture>$VAR[MediaFlagsPathVar]/videocodec/$VAR[SourceFlagVar]</texture>
 					<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
 				</control>
 				<control type="image">
 					<left>800</left>
 					<colordiffuse>grey</colordiffuse>
 					<include>MediaFlagValues</include>
 					<texture>$VAR[MediaFlagsPathVar]/aspectratio/$INFO[ListItem.VideoAspect,,.png]</texture>
 					<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
 				</control>
 				<control type="image">
 					<left>1000</left>
 					<colordiffuse>grey</colordiffuse>
 					<include>MediaFlagValues</include>
 					<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[ListItem.AudioCodec,,.png]</texture>
 					<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
 				</control>
 				<control type="image">
 					<left>1200</left>
 					<colordiffuse>grey</colordiffuse>
 					<include>MediaFlagValues</include>
 					<texture>$VAR[MediaFlagsPathVar]/audiochannels/$INFO[ListItem.AudioChannels,,.png]</texture>
 					<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
 				</control>
 			</control>
 			<control type="group">
 				<left>1040</left>
 				<top>990</top>
 				<width>1840</width>
 				<height>90</height>
 				<animation effect="slide" start="0,0" end="-1000,10" time="720" tween="cubic" easing="inout" condition="Control.IsVisible(509) + Container.Content(tvshows)">Conditional</animation>
 				<visible>[Control.IsVisible(591) + [Container.Content(tvshows) | Container.Content(seasons)]] | [Control.IsVisible(506) + !Skin.HasSetting(Disable.RightList.TVMediaflags) + [Container.Content(tvshows) | Container.Content(seasons)]] | [Control.IsVisible(509) + [Container.Content(tvshows) | Container.Content(seasons)]]</visible>
 				<include>ViewAnimation</include>
 				<control type="group">
 					<animation effect="slide" start="0,0" end="162.5" time="120" delay="150" condition="Container.Content(seasons)">Conditional</animation>
 					<control type="image" id="900018">
 						<top>2</top>
 						<include>MediaFlagValues</include>
 						<texture>$VAR[PathFlagsStudios]$INFO[ListItem.Studio,,.png]</texture>
 						<visible>!String.IsEmpty(ListItem.Studio)</visible>
 					</control>
 					<control type="label">
 						<width>155</width>
 						<height>90</height>
 						<align>center</align>
 						<label>$INFO[ListItem.Studio]</label>
 						<font>font10</font>
 						<textcolor>grey</textcolor>
 						<wrapmultiline>true</wrapmultiline>
 						<visible>String.IsEmpty(Control.GetLabel(900018))</visible>
 					</control>
 					<control type="image">
 						<left>165</left>
 						<width>200</width>
 						<include>MediaFlagValues</include>
 						<texture fallback="$VAR[MediaFlagsPathVar]/mpaa/NR.png">$VAR[MediaFlagsPathVar]/mpaa/$VAR[RatingFlagVar]</texture>
 						<visible>!ListItem.IsParentFolder</visible>
 					</control>
 				</control>
 				<control type="group">
 					<left>350</left>
 					<visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
 					<include>VisibleFadeAnimation</include>
 					<control type="group">
 						<width>162.5</width>
 						<visible>!String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
 						<control type="label">
 							<top>2</top>
 							<height>60</height>
 							<align>center</align>
 							<label>$INFO[ListItem.Property(TotalSeasons)]</label>
 							<font>font48_bold</font>
 							<wrapmultiline>true</wrapmultiline>
 							<textcolor>grey</textcolor>
 						</control>
 						<control type="label">
 							<top>52</top>
 							<height>30</height>
 							<align>center</align>
 							<label>[LOWERCASE]$VAR[OneOrMoreSeasonsVar][/LOWERCASE]</label>
 							<font>font12</font>
 							<textcolor>grey</textcolor>
 						</control>
 					</control>
 					<control type="group">
 						<visible>!String.IsEmpty(ListItem.Property(TotalEpisodes))</visible>
 						<width>162.5</width>
 						<left>162.5</left>
 						<control type="label">
 							<top>2</top>
 							<height>60</height>
 							<align>center</align>
 							<label>$INFO[ListItem.Property(TotalEpisodes)]</label>
 							<font>font48_bold</font>
 							<wrapmultiline>true</wrapmultiline>
 							<textcolor>grey</textcolor>
 						</control>
 						<control type="label">
 							<top>52</top>
 							<height>30</height>
 							<align>center</align>
 							<label>[LOWERCASE]$VAR[OneOrMoreEpisodesVar][/LOWERCASE]</label>
 							<font>font12</font>
 							<textcolor>grey</textcolor>
 						</control>
 					</control>
 					<control type="group">
 						<visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes)) + Control.IsVisible(591)</visible>
 						<width>162.5</width>
 						<left>325</left>
 						<control type="label">
 							<height>60</height>
 							<align>center</align>
 							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
 							<font>font48_bold</font>
 							<wrapmultiline>true</wrapmultiline>
 							<textcolor>$VAR[UnWatchedEpColor]</textcolor>
 						</control>
 						<control type="label">
 							<top>52</top>
 							<height>30</height>
 							<align>center</align>
 							<label>[LOWERCASE]$LOCALIZE[16101][/LOWERCASE]</label>
 							<font>font12</font>
 							<textcolor>$VAR[UnWatchedEpColor]</textcolor>
 						</control>
 					</control>
 					<control type="group">
 						<visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes)) + Control.IsVisible(506)</visible>
 						<width>162.5</width>
 						<left>325</left>
 						<control type="label">
 							<height>60</height>
 							<align>center</align>
 							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
 							<font>font48_bold</font>
 							<wrapmultiline>true</wrapmultiline>
 							<textcolor>$VAR[RightListUnWatchedEpColor]</textcolor>
 						</control>
 						<control type="label">
 							<top>52</top>
 							<height>30</height>
 							<align>center</align>
 							<label>[LOWERCASE]$LOCALIZE[16101][/LOWERCASE]</label>
 							<font>font12</font>
 							<textcolor>$VAR[RightListUnWatchedEpColor]</textcolor>
 						</control>
 					</control>
 					<control type="group">
 						<visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes)) + Control.IsVisible(509)</visible>
 						<width>162.5</width>
 						<left>325</left>
 						<control type="label">
 							<height>60</height>
 							<align>center</align>
 							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
 							<font>font48_bold</font>
 							<wrapmultiline>true</wrapmultiline>
 							<textcolor>$VAR[MyFlixUnWatchedEpColor]</textcolor>
 						</control>
 						<control type="label">
 							<top>52</top>
 							<height>30</height>
 							<align>center</align>
 							<label>[LOWERCASE]$LOCALIZE[16101][/LOWERCASE]</label>
 							<font>font12</font>
 							<textcolor>$VAR[MyFlixUnWatchedEpColor]</textcolor>
 						</control>
 					</control>
 				</control>
 			</control>
 		</control>
 		<include condition="!Skin.HasSetting(Disable.ScrollLabel)">ScrollOffsetLabel</include>
 		<include>Topbar</include>
 		<control type="group">
 			<left>-440</left>
 			<include>SideBladeLeft</include>
 			<control type="grouplist" id="9050">
 				<include>MediaMenuTop</include>
 				<control type="button" id="6051">
 					<description>Show Info Toggle</description>
 					<textwidth>255</textwidth>
 					<include>ButtonCommonValues</include>
 					<label>$LOCALIZE[31018]</label>
 					<label2>[COLOR $VAR[ThemeLabelColor]]$VAR[InfoPanelLabelVar][/COLOR]</label2>
 					<onclick condition="Control.IsVisible(52)">$VAR[52VideoInfoPanelVar]</onclick>
 					<onclick condition="Control.IsVisible(53)">$VAR[53VideoInfoPanelVar]</onclick>
 					<onclick condition="Control.IsVisible(57)">$VAR[57VideoInfoPanelVar]</onclick>
 					<onclick condition="Control.IsVisible(59)">$VAR[59VideoInfoPanelVar]</onclick>
 					<onclick condition="Control.IsVisible(601)">$VAR[601VideoInfoPanelVar]</onclick>
 					<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(503.InfoPanel)</onclick>
 					<visible>!Container.Content(genres)</visible>
 					<visible>Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(57) | Control.IsVisible(59) | Control.IsVisible(601) | Control.IsVisible(503)</visible>
 				</control>
 				<control type="radiobutton" id="6052">
 					<description>InfoPanel Settings button</description>
 					<textwidth>352</textwidth>
 					<include>ButtonCommonValues</include>
 					<label>   - $LOCALIZE[413]</label>
 					<onclick>Skin.ToggleSetting(Enable.ManualInfoPanel)</onclick>
 					<onclick condition="!Skin.HasSetting(Enable.ManualInfoPanel)">Skin.Reset(InfoPanel.Delay)</onclick>
 					<selected>Skin.HasSetting(Enable.ManualInfoPanel)</selected>
 					<visible>!Container.Content(genres) + Window.IsActive(videos) + Control.IsVisible(6051) + [!String.IsEmpty(Control.GetLabel(4420)) | !String.IsEmpty(Control.GetLabel(4421))]</visible>
 				</control>
 				<control type="togglebutton" id="6054">
 					<description>LowList Toggle</description>
 					<textwidth>255</textwidth>
 					<include>ButtonCommonValues</include>
 					<label>$LOCALIZE[31093]</label>
 					<onclick>Skin.ToggleSetting(nohighlist)</onclick>
 					<onclick>ReloadSkin()</onclick>
 					<visible>Control.IsVisible(501)</visible>
 				</control>
 				<control type="button" id="201">
 					<description>View options</description>
 					<textwidth>352</textwidth>
 					<font>font13_title</font>
 					<include>ButtonCommonValues</include>
 					<label>31026</label>
 					<enable>no</enable>
 					<disabledcolor>$VAR[ThemeLabelColor]</disabledcolor>
 				</control>
 				<control type="button" id="10">
 					<description>Watched Toggle</description>
 					<textwidth>255</textwidth>
 					<include>ButtonCommonValues</include>
 					<label>20367</label>
 					<label2>[COLOR $VAR[ThemeLabelColor]]$INFO[Container.NumItems][/COLOR]</label2>
 				</control>
 				<control type="button" id="8">
 					<description>Search</description>
 					<include>ButtonCommonValues</include>
 					<label>137</label>
 					<onclick>ClearProperty(MediaMenu,Home)</onclick>
 					<onclick>SetFocus(50)</onclick>
 				</control>
 				<control type="edit" id="19">
 					<visible>Container.CanFilter + !Container.CanFilterAdvanced</visible>
 					<description>Filter</description>
 					<textwidth>345</textwidth>
 					<include>ButtonCommonValues</include>
 					<label>587</label>
 				</control>
 				<control type="button" id="98">
 					<visible>Container.CanFilterAdvanced</visible>
 					<description>Filter</description>
 					<include>ButtonCommonValues</include>
 					<label>587</label>
 					<onclick>ClearProperty(MediaMenu,Home)</onclick>
 					<onclick>SetFocus(50)</onclick>
 					<onclick>Filter</onclick>
 				</control>
 				<control type="radiobutton" id="16">
 					<description>PartyMode</description>
 					<label>589</label>
 					<include>ButtonCommonValues</include>
 					<visible>Container.Content(MusicVideos)</visible>
 				</control>
 				<control type="radiobutton" id="11">
 					<description>Unlock Shares</description>
 					<textwidth>255</textwidth>
 					<include>ButtonCommonValues</include>
 					<label>20336</label>
 					<onclick>xbmc.mastermode</onclick>
 					<selected>system.ismaster</selected>
 					<visible>system.haslocks</visible>
 				</control>
 				<control type="button" id="203">
 					<description>View options</description>
 					<textwidth>352</textwidth>
 					<font>font13_title</font>
 					<include>ButtonCommonValues</include>
 					<label>31039</label>
 					<enable>no</enable>
 					<disabledcolor>$VAR[ThemeLabelColor]</disabledcolor>
 				</control>
 				<control type="togglebutton" id="20">
 					<description>Update library</description>
 					<include>ButtonCommonValues</include>
 					<label>653</label>
 					<altlabel>13353</altlabel>
 					<usealttexture>library.isscanningvideo</usealttexture>
 				</control>
 				<control type="button" id="612">
 					<description>Go to playlist</description>
 					<include>ButtonCommonValues</include>
 					<label>13350</label>
 					<onclick>ClearProperty(MediaMenu,Home)</onclick>
 					<onclick>ActivateWindow(videoplaylist)</onclick>
 					<visible>!String.IsEqual(Playlist.Length(video),0)</visible>
 				</control>
 				<control type="button" id="613">
 					<description>Get more</description>
 					<include>ButtonCommonValues</include>
 					<label>$LOCALIZE[21452]</label>
 					<onclick>ClearProperty(MediaMenu,Home)</onclick>
 					<onclick>ActivateWindow(addonbrowser,addons://more/video/,return)</onclick>
 					<visible>Container.Content(addons)</visible>
 				</control>
 				<control type="button" id="614">
 					<description>Add-on settings</description>
 					<include>ButtonCommonValues</include>
 					<label>$LOCALIZE[10140]</label>
 					<onclick>Addon.OpenSettings($INFO[Container.PluginName])</onclick>
 					<visible>!String.IsEmpty(Container.PluginName)</visible>
 				</control>
 			</control>
 			<include>MediaMenuPlayerControls</include>
 		</control>
 		<control type="group">
 			<visible allowhiddenfocus="true">Control.HasFocus(615)</visible>
 			<left>880</left>
 			<top>310</top>
 			<include>VisibleFadeAnimation</include>
 			<animation effect="slide" start="0" end="-608,-60" time="1" condition="Control.IsVisible(57)">Conditional</animation>
 			<animation effect="slide" start="0" end="0,200" time="1" condition="Control.IsVisible(59)">Conditional</animation>
 			<animation effect="slide" start="0" end="0,-200" time="1" condition="Control.IsVisible(505)">Conditional</animation>
 			<animation effect="slide" start="0" end="0,155" time="1" condition="Control.IsVisible(506)">Conditional</animation>
 			<control type="button" id="615">
 				<description>Go to letter</description>
 				<include>HiddenObject</include>
 				<onup condition="!Control.IsVisible(506)">SetFocus(50)</onup>
 				<ondown condition="!Control.IsVisible(506)">4400</ondown>
 				<onup condition="Control.IsVisible(506)">SetFocus(50)</onup>
 				<onup condition="Control.IsVisible(506)">Action(prevletter)</onup>
 				<onup condition="Control.IsVisible(506)">SetFocus(615)</onup>
 				<ondown condition="Control.IsVisible(506)">SetFocus(50)</ondown>
 				<ondown condition="Control.IsVisible(506)">Action(nextletter)</ondown>
 				<ondown condition="Control.IsVisible(506)">SetFocus(615)</ondown>
 				<onleft>SetFocus(50)</onleft>
 				<onleft condition="!Control.IsVisible(506)">Action(prevletter)</onleft>
 				<onleft condition="!Control.IsVisible(506)">SetFocus(615)</onleft>
 				<onright condition="!Control.IsVisible(506)">SetFocus(50)</onright>
 				<onright condition="!Control.IsVisible(506)">Action(nextletter)</onright>
 				<onright condition="!Control.IsVisible(506)">SetFocus(615)</onright>
 				<onright condition="Control.IsVisible(506)">4400</onright>
 				<onback>50</onback>
 			</control>
 			<control type="image">
 				<left>-84</left>
 				<top>-84</top>
 				<width>328</width>
 				<height>328</height>
 				<texture border="85">sortletter_back.png</texture>
 				<animation effect="rotate" end="90" center="auto" condition="Control.IsVisible(506)">Conditional</animation>
 			</control>
 			<control type="label">
 				<top>12</top>
 				<width>160</width>
 				<height>120</height>
 				<align>center</align>
 				<label>$INFO[ListItem.SortLetter]</label>
 				<textcolor>white</textcolor>
 				<font>font_MainMenu</font>
 			</control>
 		</control>
 		<!-- Fullscreen Fanart -->
 		<control type="image">
 			<include>FullscreenDimensions</include>
 			<texture>black.png</texture>
 			<visible>Skin.HasSetting(Enable.FullscreenFanart) + Window.IsActive(1113)</visible>
 		</control>
 		<control type="multiimage">
 			<imagepath background="true">$VAR[GlobalBackgroundVar]</imagepath>
 			<fadetime>FanartCrossfadeTime</fadetime>
 			<visible>Skin.HasSetting(Enable.FullscreenFanart) + Window.IsActive(1113)</visible>
 			<animation effect="fade" time="500">Visible</animation>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),5)">FanartTimePerImage5</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),6)">FanartTimePerImage6</include>
 			<include condition="String.IsEmpty(Skin.String(FanartTimePerImage))">FanartTimePerImage7</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),8)">FanartTimePerImage8</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),9)">FanartTimePerImage9</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),10)">FanartTimePerImage10</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),15)">FanartTimePerImage15</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),20)">FanartTimePerImage20</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),30)">FanartTimePerImage30</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),60)">FanartTimePerImage60</include>
 			<include condition="String.IsEqual(Skin.String(FanartTimePerImage),90)">FanartTimePerImage90</include>
 		</control>
 	</controls>
 </window>